{"version":3,"sources":["app.js"],"names":["sideSwiper","initSwiper","screenWidth","window","innerWidth","Swiper","loop","direction","slidesPerView","spaceBetween","freeMode","centerMode","destroy","slideToClickedSlide","pagination","navigation","mainSwiper","fashionSwiper","fullscreenImages","fullImageSwiper","sideModalSwiper","document","addEventListener","nextEl","prevEl","error","console","keyboard","mousewheel","enabled","onlyInViewport","forceToAxis","breakpoints","768","el","clickable","bulletActiveClass","allowSlidePrev","allowSlideNext","grabCursor","simulateTouch","600","0","type","showBonusDescription","querySelectorAll","forEach","button","modalId","dataset","popup","modal","querySelector","classList","toggle","toggleModal","buttons","closeButtons","main","footer","modals","overlays","body","safelyRemoveClass","cn","remove","safelyAddClass","add","applyBlur","removeBlur","removeAllModals","contains","e","key","overlay","target","handleSmallScreenModal","sliderWrap","removeEventListener","accordion","accordionBlocks","accordionButtons","accordionContents","activeBlockIndex","render","content","index","block","style","maxHeight","overflow","transition","setInitialStyles","height","scrollHeight","calculateBlockHeight","showContent","hideContent","handleButtonClick","handleFashionItemClick","selectors","containers","length","removeActiveStates","container","btn","info","containerWidth","clientWidth","item","itemRect","getBoundingClientRect","containerRect","left","closest","fashionItem","hiddenInfo","toggleVisibility","isClickInsideContainer","isClickInsideInfo","makeButtonFollowCursor","followButton","isFollowing","handleMove","event","x","y","touches","clientX","clientY","rect","buttonWidth","offsetWidth","buttonHeight","offsetHeight","maxX","right","minX","maxY","bottom","minY","top","clampedX","Math","max","min","clampedY","handleMouseEnter","opacity","handleMouseLeave","handleCartButtonVisibility","cartButton","sizeModal","IntersectionObserver","entries","entry","isIntersecting","inInitialPosition","threshold","observe"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["let sideSwiper = null;\nconst initSwiper = () => {\n   const screenWidth = window.innerWidth;\n\n   if (screenWidth <= 600 && sideSwiper === null) {\n      sideSwiper = new Swiper(\"._side-slider\", {\n         loop: false,\n         direction: \"horizontal\",\n         slidesPerView: 5,\n         spaceBetween: 12,\n         freeMode: false,\n         centerMode: true,\n      });\n   } else if (screenWidth > 600) {\n      if (sideSwiper) {\n         sideSwiper.destroy(true, true);\n      }\n      sideSwiper = new Swiper(\"._side-slider\", {\n         loop: true,\n         direction: \"vertical\",\n         slidesPerView: 5,\n         freeMode: false,\n         slideToClickedSlide: true,\n         pagination: false,\n         navigation: false,\n      });\n   }\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n   initSwiper();\n   window.addEventListener(\"resize\", initSwiper);\n});\n\nlet mainSwiper;\ntry {\n   mainSwiper = new Swiper(\"._main-slider\", {\n      loop: true,\n      pagination: false,\n      slidesPerView: 1,\n      spaceBetween: 2,\n      navigation: {\n         nextEl: \"._main-slider .main-swiper-button-next\",\n         prevEl: \"._main-slider .main-swiper-button-prev\",\n      },\n   });\n} catch (error) {\n   console.error(\"Error initializing Main Swiper:\", error);\n}\n\nlet fashionSwiper;\ntry {\n   fashionSwiper = new Swiper(\"._fashion-slider\", {\n      loop: true,\n      slidesPerView: \"auto\",\n      spaceBetween: 11,\n      centerMode: false,\n      navigation: true,\n      keyboard: true,\n      mousewheel: true,\n      // slideToClickedSlide: true,\n      navigation: {\n         nextEl: \".fashion__arrow_wrap .swiper-button-next\",\n         prevEl: \".fashion__arrow_wrap .swiper-button-prev\",\n      },\n      keyboard: {\n         enabled: true,\n         onlyInViewport: true,\n      },\n      mousewheel: {\n         forceToAxis: true,\n      },\n      breakpoints: {\n         768: {\n            spaceBetween: 20,\n         },\n      },\n   });\n} catch (error) {\n   console.error(\"Error initializing Fashion Swiper:\", error);\n}\n\nlet fullscreenImages;\ntry {\n   fullscreenImages = new Swiper(\"._fullscreen-slider\", {\n      loop: false,\n      slidesPerView: 1,\n      spaceBetween: 2,\n      navigation: false,\n      pagination: {\n         el: \".swiper-pagination\",\n         clickable: true,\n         bulletActiveClass: \"swiper-pagination-bullet-active\",\n      },\n      allowSlidePrev: true,\n      allowSlideNext: true,\n      grabCursor: true,\n      simulateTouch: true,\n      breakpoints: {\n         600: {\n            pagination: {\n               enabled: false,\n            },\n         },\n         0: {\n            pagination: {\n               enabled: true,\n            },\n         },\n      },\n   });\n} catch (error) {\n   console.error(\"Error initializing Main Swiper:\", error);\n}\n\nlet fullImageSwiper;\ntry {\n   fullImageSwiper = new Swiper(\"._fullImage-slider\", {\n      loop: true,\n      slidesPerView: 1,\n      navigation: {\n         nextEl: \"._fullImage-slider .__next\",\n         prevEl: \"._fullImage-slider .__prev\",\n      },\n      pagination: {\n         el: \".swiper-pagination._fullImage-pagination\",\n         type: \"fraction\",\n      },\n   });\n} catch (error) {\n   console.error(\"Error initializing Main Swiper:\", error);\n}\n\nlet sideModalSwiper;\ntry {\n   sideModalSwiper = new Swiper(\"._sideModal-slider\", {\n      loop: true,\n      direction: \"vertical\",\n      slidesPerView: 5,\n      pagination: false,\n      navigation: false,\n      // centeredSlides: true,\n      slideToClickedSlide: true,\n   });\n} catch (error) {\n   console.error(\"Error initializing Side Swiper:\", error);\n}\n\nconst showBonusDescription = () => {\n   document\n      .querySelectorAll(\".card__bonus_description_btn\")\n      .forEach((button) => {\n         button.addEventListener(\"click\", () => {\n            const modalId = button.dataset.popup;\n            const modal = document.querySelector(\n               `.hidden__bonus_description[popup-id=\"${modalId}\"]`\n            );\n\n            if (modal) {\n               modal.classList.toggle(\"_show\");\n            }\n         });\n      });\n};\nshowBonusDescription();\n\nconst toggleModal = () => {\n   const buttons = document.querySelectorAll(\"[data-modal]\");\n   const closeButtons = document.querySelectorAll(\".modal__close\");\n   const main = document.querySelector(\".main\");\n   const footer = document.querySelector(\".footer\");\n   const modals = document.querySelectorAll(\"._modal\");\n   const overlays = document.querySelectorAll(\"._overlay\");\n   // const html = document.querySelector('html');\n   const body = document.querySelector(\"body\");\n\n   const showClass = \"_show\";\n   const blurClass = \"_blur\";\n   const overflowHiddenClass = \"_overflowHidden\";\n\n   const safelyRemoveClass = (el, cn) => {\n      if (el) {\n         el.classList.remove(cn);\n      }\n   };\n\n   const safelyAddClass = (el, cn) => {\n      if (el) {\n         el.classList.add(cn);\n      }\n   };\n\n   const applyBlur = () => {\n      safelyAddClass(main, blurClass);\n      safelyAddClass(footer, blurClass);\n   };\n\n   const removeBlur = () => {\n      safelyRemoveClass(main, blurClass);\n      safelyRemoveClass(footer, blurClass);\n   };\n\n   const removeAllModals = () => {\n      modals.forEach((modal) => safelyRemoveClass(modal, showClass));\n      removeBlur();\n      // safelyRemoveClass(html, overflowHiddenClass);\n      safelyRemoveClass(body, overflowHiddenClass);\n   };\n\n   buttons.forEach((button) => {\n      button.addEventListener(\"click\", () => {\n         removeAllModals();\n\n         const modalId = button.dataset.modal;\n\n         const modal = document.querySelector(`[modal-id=\"${modalId}\"]`);\n\n         safelyAddClass(modal, showClass);\n\n         if (modal && modal.classList.contains(showClass)) {\n            applyBlur();\n            // safelyAddClass(html, overflowHiddenClass);\n            safelyAddClass(body, overflowHiddenClass);\n         }\n      });\n   });\n\n   closeButtons.forEach((button) => {\n      button.addEventListener(\"click\", () => {\n         removeAllModals();\n      });\n   });\n\n   document.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\") {\n         removeAllModals();\n      }\n   });\n\n   overlays.forEach((overlay) => {\n      overlay.addEventListener(\"click\", (e) => {\n         if (e.target === overlay) {\n            removeAllModals();\n         }\n      });\n   });\n\n   const handleSmallScreenModal = () => {\n      const sliderWrap = document.querySelector(\n         \".main__slider_wrap[data-modal='modal-fullscreenSliderImage']\"\n      );\n      const modal = document.querySelector(\n         \"[modal-id='modal-fullscreenSliderImage']\"\n      );\n\n      if (!sliderWrap || !modal) return;\n\n      const addModalClasses = () => {\n         safelyAddClass(modal, showClass);\n         applyBlur();\n         safelyAddClass(body, overflowHiddenClass);\n      };\n\n      const removeModalClasses = () => {\n         safelyRemoveClass(modal, showClass);\n         removeBlur();\n         safelyRemoveClass(body, overflowHiddenClass);\n      };\n\n      if (window.innerWidth <= 600) {\n         sliderWrap.addEventListener(\"click\", () => {\n            removeAllModals();\n         });\n      } else {\n         sliderWrap.removeEventListener(\"click\", () => {});\n\n         removeModalClasses();\n      }\n   };\n\n   handleSmallScreenModal();\n   window.addEventListener(\"resize\", handleSmallScreenModal);\n};\n\ntoggleModal();\n\nconst accordion = () => {\n   const accordionBlocks = document.querySelectorAll(\"._accordion_block\");\n   const accordionButtons = document.querySelectorAll(\"._accordion_btn\");\n   const accordionContents = document.querySelectorAll(\n      \"._accordion_hidden_content\"\n   );\n\n   const INIT_ITEM = 0;\n\n   let activeBlockIndex = INIT_ITEM;\n\n   const setInitialStyles = (content) => {\n      content.style.maxHeight = \"0\";\n      content.style.overflow = \"hidden\";\n      content.style.transition = \"max-height 0.3s ease\";\n   };\n\n   const calculateBlockHeight = (content) => {\n      content.style.maxHeight = \"auto\";\n      const height = content.scrollHeight + \"px\";\n      return height;\n   };\n\n   const hideContent = (content) => {\n      content.style.maxHeight = \"0\";\n   };\n\n   const showContent = (content, height) => {\n      content.style.maxHeight = height;\n   };\n\n   const render = () => {\n      accordionContents.forEach((content, index) => {\n         const block = accordionBlocks[index];\n         setInitialStyles(content);\n         block.classList.remove(\"_active\");\n\n         if (index === activeBlockIndex) {\n            const height = calculateBlockHeight(content);\n            showContent(content, height);\n            block.classList.add(\"_active\");\n         } else {\n            hideContent(content);\n         }\n      });\n   };\n\n   const handleButtonClick = (index) => {\n      return () => {\n         activeBlockIndex = activeBlockIndex === index ? -1 : index;\n         render();\n      };\n   };\n\n   accordionButtons.forEach((button, index) => {\n      button.addEventListener(\"click\", handleButtonClick(index));\n   });\n\n   render();\n};\naccordion();\n\nconst handleFashionItemClick = () => {\n   const selectors = {\n      container: \".fashion__hidden_block\",\n      item: \".fashion__hidden_item\",\n      button: \".fashion__btn\",\n      info: \".fashion__hidden_info\",\n      activeClass: \"_active\",\n      showClass: \"_show\",\n   };\n\n   const containers = document.querySelectorAll(selectors.container);\n\n   if (!containers.length) {\n      return;\n   }\n\n   const removeActiveStates = (container) => {\n      container\n         .querySelectorAll(`${selectors.button}.${selectors.activeClass}`)\n         .forEach((btn) => btn.classList.remove(selectors.activeClass));\n\n      container\n         .querySelectorAll(`${selectors.info}.${selectors.showClass}`)\n         .forEach((info) => info.classList.remove(selectors.showClass));\n   };\n\n   const toggleVisibility = (button, hiddenInfo, container) => {\n      if (button.classList.contains(selectors.activeClass)) {\n         button.classList.remove(selectors.activeClass);\n         hiddenInfo.classList.remove(selectors.showClass);\n      } else {\n         removeActiveStates(container);\n         button.classList.add(selectors.activeClass);\n         hiddenInfo.classList.add(selectors.showClass);\n      }\n   };\n\n   containers.forEach((container) => {\n      let containerWidth = container.clientWidth;\n\n      let containerItems = container.querySelectorAll(selectors.item);\n      containerItems.forEach((item) => {\n         // Координаты элемента относительно viewport\n         let itemRect = item.getBoundingClientRect();\n         // Координаты контейнера относительно viewport\n         let containerRect = container.getBoundingClientRect();\n\n         // Вычисляем позицию элемента относительно контейнера\n         let itemLeftRelativeToContainer = itemRect.left - containerRect.left;\n         // let itemTopRelativeToContainer = itemRect.top - containerRect.top;\n         if (itemLeftRelativeToContainer < containerWidth / 2) {\n            item.classList.add(\"left\");\n         } else {\n            item.classList.add(\"right\");\n         }\n      });\n      container.addEventListener(\"click\", (e) => {\n         const button = e.target.closest(selectors.button);\n         if (!button) return;\n\n         const fashionItem = button.closest(selectors.item);\n         if (!fashionItem) return;\n\n         const hiddenInfo = fashionItem.querySelector(selectors.info);\n         if (!hiddenInfo) return;\n\n         toggleVisibility(button, hiddenInfo, container);\n      });\n   });\n\n   document.addEventListener(\"click\", (e) => {\n      containers.forEach((container) => {\n         const isClickInsideContainer = container.contains(e.target);\n         const isClickInsideInfo = e.target.closest(selectors.info);\n\n         if (!isClickInsideContainer && !isClickInsideInfo) {\n            removeActiveStates(container);\n         }\n      });\n   });\n};\nhandleFashionItemClick();\n\nfunction makeButtonFollowCursor() {\n   const sliderWraps = document.querySelectorAll(\".main__slider_wrap\");\n\n   sliderWraps.forEach((sliderWrap) => {\n      const followButton = sliderWrap.querySelector(\n         '.main__showModal_btn[attr=\"hoveredPlus\"]'\n      );\n\n      if (!followButton) {\n         return;\n      }\n\n      let isFollowing = false;\n\n      function handleMove(event) {\n         if (!isFollowing) return;\n\n         let x, y;\n\n         if (event.type === \"touchmove\") {\n            x = event.touches[0].clientX;\n            y = event.touches[0].clientY;\n         } else {\n            x = event.clientX;\n            y = event.clientY;\n         }\n\n         const rect = sliderWrap.getBoundingClientRect();\n         const buttonWidth = followButton.offsetWidth;\n         const buttonHeight = followButton.offsetHeight;\n\n         const maxX = rect.right - buttonWidth / 2;\n         const minX = rect.left + buttonWidth / 2;\n         const maxY = rect.bottom - buttonHeight / 2;\n         const minY = rect.top + buttonHeight / 2;\n\n         const clampedX = Math.max(minX, Math.min(x, maxX));\n         const clampedY = Math.max(minY, Math.min(y, maxY));\n\n         followButton.style.left =\n            clampedX - rect.left - buttonWidth / 2 + \"px\";\n         followButton.style.top = clampedY - rect.top - buttonHeight / 2 + \"px\";\n      }\n\n      function handleMouseEnter() {\n         isFollowing = true;\n         followButton.style.opacity = 1;\n      }\n\n      function handleMouseLeave() {\n         isFollowing = false;\n         followButton.style.opacity = 0;\n      }\n\n      sliderWrap.addEventListener(\"mouseenter\", handleMouseEnter);\n      sliderWrap.addEventListener(\"mouseleave\", handleMouseLeave);\n\n      sliderWrap.addEventListener(\"mousemove\", handleMove);\n      sliderWrap.addEventListener(\"touchmove\", handleMove);\n      sliderWrap.addEventListener(\"touchstart\", handleMouseEnter);\n      sliderWrap.addEventListener(\"touchend\", handleMouseLeave);\n   });\n}\nmakeButtonFollowCursor();\n\nfunction handleCartButtonVisibility() {\n   const cartButton = document.querySelector(\n      '.card__addCart_btn[attr=\"addCart\"]'\n   );\n   const sizeModal = document.querySelector('[modal-id=\"modal-plawkaSize\"]');\n\n   if (!cartButton || !sizeModal) {\n      return;\n   }\n\n   sizeModal.classList.remove(\"_show\");\n\n   function isInInitialPosition() {\n      const buttonRect = cartButton.getBoundingClientRect();\n      return buttonRect.top > 0;\n   }\n\n   const observer = new IntersectionObserver(\n      (entries) => {\n         entries.forEach((entry) => {\n            const isIntersecting = entry.isIntersecting;\n            const inInitialPosition = isInInitialPosition();\n\n            // console.log(\"isIntersecting:\", isIntersecting);\n            // console.log(\"isInInitialPosition:\", inInitialPosition);\n\n            if (!isIntersecting && !inInitialPosition) {\n               sizeModal.classList.add(\"_show\");\n               // console.log(\"Adding _show class\");\n            } else {\n               sizeModal.classList.remove(\"_show\");\n               // console.log(\"Removing _show class\");\n            }\n         });\n      },\n      {\n         threshold: 0,\n      }\n   );\n\n   observer.observe(cartButton);\n}\n\nhandleCartButtonVisibility();\n"]}