{"version":3,"sources":["app.js"],"names":["sideSwiper","initSwiper","screenWidth","window","innerWidth","Swiper","loop","direction","slidesPerView","spaceBetween","freeMode","centerMode","destroy","pagination","navigation","mainSwiper","fashionSwiper","fullImageSwiper","sideModalSwiper","document","addEventListener","nextEl","prevEl","error","console","slideToClickedSlide","breakpoints","600","1024","showBonusDescription","querySelectorAll","forEach","button","modalId","dataset","popup","modal","querySelector","classList","toggle","toggleModal","buttons","closeButtons","main","footer","modals","html","body","safelyRemoveClass","element","className","remove","safelyAddClass","add","removeAllModals","log","warn","contains","accordion","accordionBlocks","accordionButtons","accordionContents","activeBlockIndex","render","content","index","block","style","maxHeight","overflow","transition","setInitialStyles","height","scrollHeight","calculateBlockHeight","showContent","hideContent","handleButtonClick","handleFashionItemClick","selectors","containers","length","toggleVisibility","hiddenInfo","container","btn","info","removeActiveStates","e","target","closest","fashionItem","makeButtonFollowCursor","sliderWrap","followButton","isFollowing","handleMove","event","x","y","type","touches","clientX","clientY","rect","getBoundingClientRect","buttonWidth","offsetWidth","buttonHeight","offsetHeight","maxX","right","minX","left","maxY","bottom","minY","top","clampedX","Math","max","min","clampedY","handleMouseEnter","opacity","handleMouseLeave"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["let sideSwiper = null;\nconst initSwiper = () => {\n   const screenWidth = window.innerWidth;\n\n   if (screenWidth <= 600 && sideSwiper === null) {\n      sideSwiper = new Swiper('._side-slider', {\n         loop: false,\n         direction: 'horizontal',\n         slidesPerView: 5,\n         spaceBetween: 12,\n         freeMode: false,\n         centerMode: true,\n      });\n   } else if (screenWidth > 600) {\n      if(sideSwiper) {\n         sideSwiper.destroy(true, true);\n      }\n      sideSwiper = new Swiper('._side-slider', {\n         loop: true,\n         direction: 'vertical',\n         slidesPerView: 5,\n         freeMode: true,\n         pagination: false,\n         navigation: false,\n      });\n   }\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n   initSwiper();\n   window.addEventListener('resize', initSwiper);\n});\n\nlet mainSwiper;\ntry {\n   mainSwiper = new Swiper('._main-slider', {\n      loop: true,\n      pagination: false,\n      slidesPerView: 1,\n      spaceBetween: 2,\n      navigation: {\n         nextEl: '._main-slider .main-swiper-button-next',\n         prevEl: '._main-slider .main-swiper-button-prev',\n      },\n   });\n\n} catch (error) {\n   console.error('Error initializing Main Swiper:', error);\n}\n\nlet fashionSwiper;\ntry {\n   fashionSwiper = new Swiper('._fashion-slider', {\n      loop: true,\n      slidesPerView: \"auto\",\n      // freeMode: true,\n      spaceBetween: 20,\n      pagination: false,\n      centerMode: false,\n      slideToClickedSlide: true,\n      // slidesPerView: 1,\n      navigation: {\n         nextEl: '.fashion__arrow_wrap .swiper-button-next',\n         prevEl: '.fashion__arrow_wrap .swiper-button-prev',\n      },\n      breakpoints: {\n         600: {\n            navigation: false,\n         },\n         1024: {\n            navigation: true,\n         },\n      }\n   });\n\n} catch (error) {\n   console.error('Error initializing Main Swiper:', error);\n}\n\nlet fullImageSwiper;\ntry {\n   fullImageSwiper = new Swiper('._fullImage-slider', {\n      loop: true,\n      pagination: true,\n      slidesPerView: 1,\n      navigation: {\n         nextEl: '._fullImage-slider .__next',\n         prevEl: '._fullImage-slider .__prev',\n      },\n   });\n\n} catch (error) {\n   console.error('Error initializing Main Swiper:', error);\n}\n\nlet sideModalSwiper;\ntry {\n   sideModalSwiper = new Swiper('._sideModal-slider', {\n      loop: true,\n      direction: 'vertical',\n      slidesPerView: 5,\n      pagination: false,\n      navigation: false,\n      // centeredSlides: true,\n      slideToClickedSlide: true,\n   });\n\n} catch (error) {\n   console.error('Error initializing Side Swiper:', error);\n}\n\nconst showBonusDescription = () => {\n   document.querySelectorAll('.card__bonus_description_btn').forEach(button => {\n      button.addEventListener('click', () => {\n         const modalId = button.dataset.popup;\n         const modal = document.querySelector(`.hidden__bonus_description[popup-id=\"${modalId}\"]`);\n         \n         if (modal) {\n            modal.classList.toggle('_show');\n         }\n      });\n   });\n};\nshowBonusDescription();\n\nconst toggleModal = () => {\n   const buttons = document.querySelectorAll(\"[data-modal]\");\n   const closeButtons = document.querySelectorAll(\".modal__close\");\n   const main = document.querySelector(\".main\");\n   const footer = document.querySelector(\".footer\");\n   const modals = document.querySelectorAll(\"._modal\");\n   const html = document.querySelector('html');\n   const body = document.querySelector('body');\n\n   const showClass = \"_show\";\n   const blurClass = \"_blur\";\n   const overflowHiddenClass = \"_overflowHidden\";\n\n   const safelyRemoveClass = (element, className) => {\n      if (element) {\n         element.classList.remove(className);\n      }\n   };\n\n   const safelyAddClass = (element, className) => {\n      if (element) {\n         element.classList.add(className);\n      }\n   };\n\n   const applyBlur = () => {\n      safelyAddClass(main, blurClass);\n      safelyAddClass(footer, blurClass);\n   };\n\n   const removeBlur = () => {\n      safelyRemoveClass(main, blurClass);\n      safelyRemoveClass(footer, blurClass);\n   };\n\n   const removeAllModals = () => {\n      modals.forEach(modal => safelyRemoveClass(modal, showClass));\n      removeBlur();\n      safelyRemoveClass(html, overflowHiddenClass);\n      safelyRemoveClass(body, overflowHiddenClass);\n   };\n\n   buttons.forEach(button => {\n      button.addEventListener(\"click\", () => {\n         console.log(`Button clicked: ${button.dataset.modal}`);\n\n         removeAllModals();\n\n         const modalId = button.dataset.modal;\n         console.log(`Modal ID to open: ${modalId}`);\n\n         const modal = document.querySelector(`[modal-id=\"${modalId}\"]`);\n\n         if (modal) {\n         console.log(`Modal element found:`, modal);\n         } else {\n         console.warn(`Modal element not found with modal-id: ${modalId}`);\n         }\n\n         safelyAddClass(modal, showClass);\n\n         if (modal && modal.classList.contains(showClass)) {\n         console.log(`Modal \"${modalId}\" is now visible. Applying blur.`);\n         applyBlur();\n         safelyAddClass(html, overflowHiddenClass);\n         safelyAddClass(body, overflowHiddenClass);\n         } else {\n         console.warn(`Modal \"${modalId}\" failed to show or doesn't exist. Blur not applied.`);\n         }\n      });\n   });\n\n   closeButtons.forEach(button => {\n      button.addEventListener(\"click\", () => {\n         removeAllModals();\n      });\n   });\n};\ntoggleModal();\n\nconst accordion = () => {\n   const accordionBlocks = document.querySelectorAll('._accordion_block');\n   const accordionButtons = document.querySelectorAll('._accordion_btn');\n   const accordionContents = document.querySelectorAll('._accordion_hidden_content');\n\n   const INIT_ITEM = 0;\n\n   let activeBlockIndex = INIT_ITEM;\n\n   const setInitialStyles = (content) => {\n      content.style.maxHeight = '0';\n      content.style.overflow = 'hidden';\n      content.style.transition = 'max-height 0.3s ease';\n   };\n\n   const calculateBlockHeight = (content) => {\n      content.style.maxHeight = 'auto';\n      const height = content.scrollHeight + 'px';\n      return height;\n   };\n\n   const hideContent = (content) => {\n      content.style.maxHeight = '0';\n   };\n\n   const showContent = (content, height) => {\n      content.style.maxHeight = height;\n\n   };\n\n   const render = () => {\n      accordionContents.forEach((content, index) => {\n         const block = accordionBlocks[index];\n         setInitialStyles(content);\n         block.classList.remove('_active');\n\n         if (index === activeBlockIndex) {\n         const height = calculateBlockHeight(content);\n         showContent(content, height);\n         block.classList.add('_active');\n         } else {\n         hideContent(content);\n         }\n      });\n   };\n\n   const handleButtonClick = (index) => {\n      return () => {\n         activeBlockIndex = (activeBlockIndex === index) ? -1 : index;\n         render();\n      };\n   };\n\n   accordionButtons.forEach((button, index) => {\n      button.addEventListener('click', handleButtonClick(index));\n   });\n\n   render();\n};\naccordion();\n\nconst handleFashionItemClick = () => {\n   const selectors = {\n      container: '.fashion__hidden_block',\n      item: '.fashion__hidden_item',\n      button: '.fashion__btn',\n      info: '.fashion__hidden_info',\n      activeClass: '_active',\n      showClass: '_show',\n   };\n\n   const containers = document.querySelectorAll(selectors.container);\n\n   if (!containers.length) {\n      return;\n   }\n\n   const removeActiveStates = (container) => {\n      container.querySelectorAll(`${selectors.button}.${selectors.activeClass}`)\n         .forEach(btn => btn.classList.remove(selectors.activeClass));\n\n      container.querySelectorAll(`${selectors.info}.${selectors.showClass}`)\n         .forEach(info => info.classList.remove(selectors.showClass));\n   };\n\n   const toggleVisibility = (button, hiddenInfo, container) => {\n      if (button.classList.contains(selectors.activeClass)) {\n         button.classList.remove(selectors.activeClass);\n         hiddenInfo.classList.remove(selectors.showClass);\n      } else {\n         removeActiveStates(container);\n         button.classList.add(selectors.activeClass);\n         hiddenInfo.classList.add(selectors.showClass);\n      }\n   };\n\n   containers.forEach(container => {\n      container.addEventListener('click', (e) => {\n         const button = e.target.closest(selectors.button);\n         if (!button) return;\n\n         const fashionItem = button.closest(selectors.item);\n         if (!fashionItem) return;\n\n         const hiddenInfo = fashionItem.querySelector(selectors.info);\n         if (!hiddenInfo) return;\n\n         toggleVisibility(button, hiddenInfo, container);\n      });\n   });\n};\nhandleFashionItemClick();\n\nfunction makeButtonFollowCursor() {\n   const sliderWraps = document.querySelectorAll('.main__slider_wrap');\n\n   sliderWraps.forEach(sliderWrap => {\n      const followButton = sliderWrap.querySelector('.main__showModal_btn[attr=\"hoveredPlus\"]');\n\n      if (!followButton) {\n         return;\n      }\n\n      let isFollowing = false;\n\n      function handleMove(event) {\n         if (!isFollowing) return;\n\n         let x, y;\n\n         if (event.type === 'touchmove') {\n         x = event.touches[0].clientX;\n         y = event.touches[0].clientY;\n         } else {\n         x = event.clientX;\n         y = event.clientY;\n         }\n\n         const rect = sliderWrap.getBoundingClientRect();\n         const buttonWidth = followButton.offsetWidth;\n         const buttonHeight = followButton.offsetHeight;\n\n         const maxX = rect.right - buttonWidth / 2;\n         const minX = rect.left + buttonWidth / 2;\n         const maxY = rect.bottom - buttonHeight / 2;\n         const minY = rect.top + buttonHeight / 2;\n\n         const clampedX = Math.max(minX, Math.min(x, maxX));\n         const clampedY = Math.max(minY, Math.min(y, maxY));\n\n         followButton.style.left = (clampedX - rect.left - buttonWidth / 2) + 'px';\n         followButton.style.top = (clampedY - rect.top - buttonHeight / 2) + 'px';\n      }\n\n      function handleMouseEnter() {\n         isFollowing = true;\n         followButton.style.opacity = 1;\n      }\n\n      function handleMouseLeave() {\n         isFollowing = false;\n         followButton.style.opacity = 0;\n      }\n\n      sliderWrap.addEventListener('mouseenter', handleMouseEnter);\n      sliderWrap.addEventListener('mouseleave', handleMouseLeave);\n\n      sliderWrap.addEventListener('mousemove', handleMove);\n      sliderWrap.addEventListener('touchmove', handleMove);\n      sliderWrap.addEventListener('touchstart', handleMouseEnter);\n      sliderWrap.addEventListener('touchend', handleMouseLeave);\n   });\n}\nmakeButtonFollowCursor();"]}